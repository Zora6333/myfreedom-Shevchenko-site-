<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Currency Converter</title>
    <link rel="stylesheet"
          href=
"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src=
"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js">
    </script>
    <script src=
"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js">
    </script>
    <script src=
"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js">
    </script>
 
    <link rel="preconnect"
          href=
"https://fonts.gstatic.com">
    <link href=
"https://fonts.googleapis.com/css2?family=Amiri&family=Lobster&family=Pacifico&display=swap"
        rel="stylesheet">
    <!-- linking style.css file-->
    <link rel="ta" href="task 19.css">
</head>
 
<body>
    <!-- Currency Converter -->
    <h1 class="heading text-center display-2">
        Currency Converter
    </h1>
    <hr>
    <div class="container">
        <div class="main">
            <div class="form-group">
                <label for="oamount">
                    Amount to Convert :
                </label>
                <input type="text" class="form-control searchBox" placeholder="0.00" id="oamount">
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">From</span>
                        </div>
                        <select class="form-control from" id="sel1">
                            <option value="">Select One …</option>

                        </select>
                    </div>
                </div>
 
                <div class="col-sm-6">
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">To</span>
                        </div>
                        <select class="form-control to" id="sel2">
                            <option value="">Select One …</option>
                        </select>
                    </div>
                </div>
            </div>
 
            <div class="text-center">
 
                <!-- convert button -->
                <button class="btn btn-primary convert m-2" type="submit">
                    Convert
                </button>
                <button  class="Swich" type="but2">
                 Поменять
                </button>
                <!-- reset button -->
                <button class="btn btn-primary m-2" onclick="clearVal()">
                    Reset
                </button>
            </div>
 
        </div>
 
        <div id="finalAmount" class="text-center">
 
            <!-- Display the converted amount -->
            <h2>Converted Amount :
                <span class="finalValue" style="color:green;">
                </span>
            </h2>
        </div>
    </div>
 
    <!-- linking script.js file -->
    <script src="task 19.js"></script>
</body>
</html>

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  background-color: #004882;
}
.currencytransfer {
  position: inherit;
  display: flex;
  justify-content: center;
  padding-left: 100px;
  padding-right: 100px;
  padding-top: 20px;
  justify-content: space-between;
}
.currency1 {
  height: 100px;
  width: 300px;
  font-size: 40px;
}
.currency2 {
  height: 100px;
  width: 300px;
  font-size: 40px;
}
select{
    width: 200px;
}
.box {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.box select {
  background-color: #0563af;
  color: white;
  padding: 12px;
  width: 250px;
  border: none;
  font-size: 20px;
  box-shadow: 0 5px 25px rgba(0, 0, 0, 0.2);
  -webkit-appearance: button;
  appearance: button;
  outline: none;
}

.box::before {
  content: "\f13a";
  font-family: FontAwesome;
  position: absolute;
  top: 0;
  right: 0;
  width: 20%;
  height: 100%;
  text-align: center;
  font-size: 28px;
  line-height: 45px;
  color: rgba(255, 255, 255, 0.5);
  background-color: rgba(255, 255, 255, 0.1);
  pointer-events: none;
}

.box:hover::before {
  color: rgba(255, 255, 255, 0.6);
  background-color: rgba(255, 255, 255, 0.2);
}

.box select option {
  padding: 30px;
}



// Include api for currency change
const api = "https://api.exchangerate-api.com/v4/latest/USD";



// For selecting different controls
var search = document.querySelector(".searchBox");
var convert = document.querySelector(".convert");
var fromCurrecy = document.querySelector(".from");
var toCurrecy = document.querySelector(".to");
var finalValue = document.querySelector(".finalValue");
var finalAmount = document.getElementById("finalAmount");
let selectElement1 = document.getElementById("sel1")
let selectElement2 = document.getElementById("sel2")
var swape = document.querySelector(".Swich");
var resultFrom;
var resultTo;
var searchValue;


fetch("https://api.exchangerate-api.com/v4/latest/USD")
  .then(response => response.json())
  .then(data => {
    // Получаем список валют из ответа API
    const currencies = Object.keys(data.rates);

    // Добавляем каждую валюту в элемент <select>
    currencies.forEach(currency => {
      const optionElement = document.createElement("option");
      optionElement.value = currency;
      optionElement.text = currency;
      selectElement1.appendChild(optionElement);
    });
  })
  .catch(error => {
    console.error("Ошибка при загрузке списка валют:", error);
  });

fetch("https://api.exchangerate-api.com/v4/latest/USD")
  .then(response => response.json())
  .then(data => {
    // Получаем список валют из ответа API
    const currencies = Object.keys(data.rates);

    // Добавляем каждую валюту в элемент <select>
    currencies.forEach(currency => {
      const optionElement = document.createElement("option");
      optionElement.value = currency;
      optionElement.text = currency;
      selectElement2.appendChild(optionElement);
    });
  })
  .catch(error => {
    console.error("Ошибка при загрузке списка валют:", error);
  });

// Event when currency is changed
fromCurrecy.addEventListener('change', (event) => {
  resultFrom = `${event.target.value}`;
});

// Event when currency is changed
toCurrecy.addEventListener('change', (event) => {
  resultTo = `${event.target.value}`;
});

search.addEventListener('input', updateValue);

// Function for updating value
function updateValue(e) {
  searchValue = e.target.value;
}

// When user clicks, it calls function getresults
convert.addEventListener("click", () => {
// Function getresults
function getResults() {
  fetch(`${api}`)
    .then(currency => {
      return currency.json();
    }).then(displayResults);
}

// Display results after conversion
function displayResults(currency) {
  let fromRate = currency.rates[resultFrom];
  let toRate = currency.rates[resultTo];
  finalValue.innerHTML = ((toRate / fromRate)* searchValue).toFixed(2);
  finalAmount.style.display = "block";
}
getResults()
});



swape.addEventListener("click", () => {
  let selectedValue1 = selectElement1.options[selectElement1.selectedIndex].value;
  let selectedValue2 = selectElement2.options[selectElement2.selectedIndex].value;

  if (selectedValue1 !== '1' && selectedValue2 !== '1') {
    const temp = selectedValue1;
    selectedValue1 = selectedValue2;
    selectedValue2 = temp;

    selectElement1.value = selectedValue1;
    selectElement2.value = selectedValue2;
    convert.style.display = 'none'
    function displayResults(currency) {
      let fromRate = currency.rates[resultFrom];
      let toRate = currency.rates[resultTo];
      finalValue.innerHTML = ((fromRate / toRate)* searchValue).toFixed(2);
      finalAmount.style.display = "block";
    }

    function getResults() {
      fetch(`${api}`)
        .then(currency => {
          return currency.json();
        }).then(displayResults);
    }
    getResults()
  }});


// When user click on reset button
function clearVal() {
  window.location.reload();
  document.getElementsByClassName("finalValue").innerHTML = "";
};


